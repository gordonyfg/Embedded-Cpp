name: CMake + GTest CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
          path-type: mingw64

      - name: Set up vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          # If using vcpkg.json, this automatically installs packages listed there
          runVcpkgInstall: true
          vcpkgJsonGlob: '**/vcpkg.json'
          vcpkgConfigurationJsonGlob: '**/vcpkg-configuration.json'
          # The above ensures pinned versions / baselines are respected

      # --------------------------
      # Configure inside MSYS2 shell
      # --------------------------
      - name: Configure with CMake (MSYS2 shell)
        shell: msys2 {0}
        run: |
          # Convert the Windows path to MSYS path if needed:
          # (Uncomment if direct usage of RUNVCPKG_VCPKG_ROOT doesn't work)
          # VCPKG_UNIX_PATH=$(cygpath -u "${RUNVCPKG_VCPKG_ROOT}")
          # echo "Using vcpkg at ${VCPKG_UNIX_PATH}"

          mkdir build
          cd build

          cmake -G "MinGW Makefiles" \
            -DCMAKE_TOOLCHAIN_FILE="${{ env.RUNVCPKG_VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake" \
            -DVCPKG_TARGET_TRIPLET=x64-mingw-dynamic \
            ../gtest_MinGW64_vscode_win_helloworld

      - name: Build with CMake (MSYS2 shell)
        shell: msys2 {0}
        run: |
          cd build
          cmake --build .

      - name: Run tests (MSYS2 shell)
        shell: msys2 {0}
        run: |
          cd build
          ctest -V
